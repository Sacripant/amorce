{% extends 'docs/extends/base.njk' %}

{% block additionalCSS %}
	<link rel="stylesheet" href="assets/anim-logo.css" type="text/css" media="screen" />
{% endblock %}

{% block header_title %}{% endblock %}


{% block main %}
<h1>
	{% include 'docs/includes/logo-amorce.svg' %} <br/>
	<span class="xsmall">v. 1610</span>
</h1>


<p class="large">
	<a href="https://github.com/Sacripant/amorce/releases" target="_blank" class="btn">
		Download
	</a>
	<a href="https://github.com/Sacripant/amorce" target="_blank" class="btn">
		Sources
	</a>
</p>


<p>
	Amorce est un starter kit pour l'intégration de site internet. <br/>
	Il se veut <em lang="en">style-agnostic</em>, léger et modulaire (utilisez uniquement le nécessaire).
</p>

<p>
	Il propose :
</p>

<ul>
	<li> Un Framework CSS (reset, typo, forms, utils, grids, etc) découpé en modules.</li>
	<li> Une documentation qu'il suffit de faire évoluer en <em>style guide</em> pour chaque projet.</li>
	<li> Une convention de nommage claire.</li>
	<li> Le langage de templating <a href="http://mozilla.github.io/nunjucks/">nunjucks</a> pour modulariser vos pages HTML et faciliter la communication avec les développeurs.</li>
	<li> La génération automatique d'une font icons à partir des images SVG présents dans le dossier <code>img/icons</code></li>
	<li> La possibilité d'utiliser les fonctions CSS <del>du future</del> <add>en cours de normalisation</add> (custom-properties, custom media queries, customs selectors, color(), etc) grâce à <a href="http://cssnext.io/">cssnext</a> (un plugin pour PostCSS)</li>
	<li> Le préfixage automatique des propriétés CSS (PostCSS auto-prefixer)</li>
	<li> Une série de <em>tasks Grunt</em> pour une compilation & un rafraichissement automatique (live refresh) du navigateur.</li>	
</ul>

<h2> Requirements </h2>

<ul>
	<li>Le projet utilise le <em>task runner</em> <a href="http://gruntjs.com/">GRUNT</a>.</li>
	<li><em>Grunt</em> et les plugins utilisés nécessitent <a href="https://nodejs.org/">nodeJS</a> >= 4.4.3.</li>
</ul>

<p>
	Pour plus de détails pour l'installation sur votre machine : <a href="http://gruntjs.com/getting-started">Grunt getting started</a>
</p>

<h2> Getting started </h2>

<p>
	Téléchargez la <a href="https://github.com/Sacripant/amorce/releases">dernière version stable de Amorce</a>.
	Depuis un shell/terminal (placé à la racine de votre projet), installer les paquets nodeJS requis avec la commande :	
</p>

<ul>
	<li><code>npm install</code></li>
</ul>

<p>Puis compilez une première fois les fichiers sources avec la commande</p>

<ul>
	<li><code>grunt init</code> ou <code>grunt build</code></li>
</ul>


<h2>Compilation à la volée</h2> 

<p>
	La commande <code>grunt</code> ou <code>grunt watch</code> est paramétrée pour lancer un <em>watcher</em> sur les fichiers sources. Ainsi à chaque modification d'un fichier source html ou css, les fichiers seront compilés à la volée.
</p>
<p>
	De plus, un serveur <a href="http://livereload.com">livereload</a> est également lancé permettant de rafraichir votre browser à chaque modification.
	Pour en profiter, il suffit d'installer l'<a href="http://livereload.com/extensions/">extension Livereload</a> correspondant à votre navigateur.
</p>


<h2>Commandes de compilation manuelles</h2> 

<ul>
	<li>
		<code>grunt buildcss</code> : 
		compile les fichiers CSS à l'aide de <a href="http://cssnext.io/">cssnext</a>.
	</li>
	<li>
		<code>grunt buildicons</code> : 
		compile les fichiers <code>.svg</code> présents dans <code>src/static/img/icons/</code>`: optimisations des images et génération d'une font icons.
	</li>
	<li>
		<code>grunt buildhtml</code> : 
		compile les fichiers sources <code>.html</code> qui utilise le system de templating _nunjucks_.
	</li>
	<li>
		<code>grunt modernizr</code> : 
		inspecte les fichiers CSS et JS du projet et compile un fichier <code>modernizr-custom.js</code>.
	</li>
	<li>
		<code>grunt builddocs</code> : 
		compile les fichiers de la présente documentation.
	</li>
</ul>

<p>
	Pour plus de précision, vous pouvez inspecter les fichiers <code>package.json</code> et <code>gruntfile.js</code>.
</p>

{% endblock %}


{% block additional_JS %}
<script>
(function($) {
	'use strict';

	$(document).ready(function($) {
		var logo = $('#logo');
		logo.addClass('run');
		logo.on('animationend', '#bomb', function(event) {
			// console.log(event.target.id);
			if (event.target.id === "bomb") {
				logo.removeClass('run');
			};
		});
	});


})(jQuery);
</script>


{% endblock %}

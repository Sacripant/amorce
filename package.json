{
  "name": "project",
  "version": "0.1.0",
  "author": "Thomas Jund â€” sacripant.fr",
  "private": true,
  "amorce_version": "1806",
  "amorce_sources": "https://github.com/Sacripant/amorce",
  "amorce_releases": "https://github.com/Sacripant/amorce/releases",
  "amorce_doc": "http://amorce.sacripant.fr",
  "devDependencies": {
    "browser-sync": "^2.24.4",
    "chokidar-cli": "^1.2.0",
    "cssnano": "~3.10.0",
    "globby": "^8.0.1",
    "modernizr": "^3.6.0",
    "npm-run-all": "^4.1.3",
    "nunjucks": "^3.1.3",
    "postcss-cli": "^5.0.0",
    "postcss-cssnext": "~3.1.0",
    "postcss-import": "~10.0.0",
    "svgo": "^1.0.5",
    "svgstore-cli": "^1.3.1",
    "yargs": "^11.0.0"
  },
  "scripts": {
    "env": "env",
    "clean:docs": "rm -f build/docs/*.html",
    "clean:css": "rm -rf build/templates/css",
    "clean": "run-s clean:*",
    "build:css": "postcss src/css/project.css -c postcss.config.js -o build/templates/css/$npm_package_name.css",
    "optim:icons": "mkdir -p build/templates/img/icons && svgo --disable=removeViewBox -f src/img/icons -o build/templates/img/icons",
    "prebuild:iconsSprite": "npm run optim:icons",
    "build:iconsSprite": "svgstore -o build/templates/img/icons-sprite.svg build/templates/img/icons/*.svg",
    "build:modernizr": "modernizr -c modernizr-config.json -d build/templates/js/modernizr-custom.js",
    "nunjucks": "node nunjucks.js --path=src",
    "build:toc": "npm run nunjucks -- --files=index.njk --out=build",
    "build:templates": "npm run nunjucks -- --files=pages/*.njk --out=build/templates --flattenPath",
    "build:docs": "npm run nunjucks -- --files=**/*.doc.njk --out=build/docs --flattenPath",
    "build": "run-s build:*",
    "watch:docs": "chokidar 'src/**/*.doc.njk' 'src/docs/extends/base.njk' -c 'npm run build:docs'",
    "watch:toc": "chokidar 'src/index.njk' -c 'npm run build:toc'",
    "watch:templates": "chokidar 'src/**/*.njk' -i 'src/**/*.doc.njk' -c 'npm run build:templates'",
    "watch:css": "chokidar 'src/**/*.css' -c 'npm run build:css'",
    "serve": "browser-sync build -w",
    "dev": "run-p -l watch:* serve",
    "prod": "NODE_ENV=production run-s clean build"
  }
}
